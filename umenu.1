.TH UMENU 1
.SH NAME
umenu \- single\-keypress menu
.SH SYNOPSIS
.B umenu
.RB [ \-nqsSvV ]
.RB [ \-d
.IR MESSAGE ]
.RB [ \-k
.IR KEYS ]
.SH DESCRIPTION
.B umenu
reads newline-separated items from stdin and assigns a keyboard key to each item. By default, the keys 1-9, 0, a-z are used. The program outputs the result associated with the user's keypress and then exits. 
.SH OPTIONS
.TP
.BR \-d " ," \-\-display =\fIMESSAGE\fR
Display this message above the menu. Won't be displayed if the user selection process is skipped (with
.B \-s
, for example).
.TP
.BR \-k ", " \-\-keys =\fIKEYS\fR
Source the keys for each option from this string
.TP
.BR \-n ", " \-\-no\-newline
Do not print the newline after after output
.TP
.BR \-q ", " \-\-quit\-on\-full
Exit with status 1 if the number of options to display exceeds the number of available keys
.TP
.BR \-s ", " \-\-skip
If only one option is present, skip user selection process
.TP
.BR \-S ", " \-\-no\-skip
Inverse of
.B \-s
.TP
.BR \-v ", " \-\-verbose
Print additional information at runtime
.TP
.BR \-V ", " \-\-no\-verbose
Inverse of
.B \-v
.SH EXAMPLES
Navigate to a subdirectory:
.PP
.nf
.RS
cd $( ls -d */ | umenu )
.RE
.fi
.PP
Confirm an action:
.PP
.nf
.PP
.RS
echo "yes, delete $FILE\\n no, keep $FILE" |
umenu -k yn -d "delete $FILE?" |
grep -Gq "^n" || rm $FILE
.RE
.fi
.PP
Use another menu program if umenu can't display all options:
.PP
.nf
.RS
{ umenu -q || dmenu } < options 
.RE
.fi
.SH BUGS
(https://github.com/jcomcl/umenu/issues)

